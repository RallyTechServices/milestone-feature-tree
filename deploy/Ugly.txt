<!DOCTYPE html>
<html>
<head>
    <title>CATS-TS Milestone Feature Tree-0.1</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Wed Sep 12 2018 13:34:02 GMT-0700 (PDT) -->

    <script type="text/javascript">
        var APP_BUILD_DATE = "Wed Sep 12 2018 13:34:02 GMT-0700 (PDT)";
        var ARTIFACT = "F588";
        var BUILDER  = "marjo60";
        var CHECKSUM = 27272669716;
    </script>

    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns)
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->


    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,showLog:!1,logger:null,items:[{xtype:"container",itemId:"information"},{xtype:"container",itemId:"button_box"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}this.showLog&&this.logger&&this.down("#button_box").add({xtype:"rallybutton",text:"Show Log",listeners:{scope:this,click:function(){this.logger.displayLog()}}}),a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,dock:"bottom"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);ARTIFACT&&(a=a+"<br/>Source artifact: "+ARTIFACT),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"top",html:a})}}}),Ext.define("CArABU.technicalservices.Logger",{saveForLater:!1,saveLines:100,logArray:[],constructor:function(a){Ext.apply(this,a)},setSaveForLater:function(a){this.saveForLater=a},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),this.saveForLater&&(this.logArray||(this.logArray=[]),this.logArray.push(c.join(" ")),this.logArray.length>this.saveLines&&this.logArray.shift()),window.console&&console.log.apply(console,c)},getLogText:function(){return this.logArray&&0!==this.logArray.length?this.logArray.join("<br/>"):"-- no log --"},displayLog:function(){var a=this.getLogText();this.popup=Ext.create("Rally.ui.dialog.Dialog",{width:Ext.getBody().getWidth()-20,height:Ext.getBody().getHeight()-20,closable:!0,title:"Log",autoShow:!0,layout:"border",defaults:{layout:"fit",width:"50%",border:!1},items:[{region:"center",xtype:"container",html:a,autoScroll:!0}]})}}),Ext.define("TSUtilities",{singleton:!0,loadWsapiRecords:function(a){var b=Ext.create("Deft.Deferred"),c={model:"Defect",fetch:["ObjectID"]};return Ext.create("Rally.data.wsapi.Store",Ext.Object.merge(c,a)).load({callback:function(a,c,d){d?b.resolve(a):(console.error("Failed: ",c),b.reject("Problem loading: "+c.error.errors.join(". ")))}}),b.promise},loadAStoreWithAPromise:function(a,b){var c=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{model:a,fetch:b}).load({callback:function(a,b,d){d?c.resolve(this):(console.error("Failed: ",b),c.reject("Problem loading: "+b.error.errors.join(". ")))}}),c.promise},fetchPortfolioNames:function(){var a=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{autoLoad:!0,model:"TypeDefinition",sorters:[{property:"Ordinal",direction:"ASC"}],filters:[{property:"Parent.Name",operator:"=",value:"Portfolio Item"},{property:"Creatable",operator:"=",value:!0}],listeners:{scope:this,load:function(b,c,d){if(d){var e=_.map(c,function(a){return Ext.util.Format.lowercase(a.get("TypePath"))});a.resolve(e)}else a.reject("Error loading portofolio item names.")}}}),a.promise}}),Ext.define("CA.technicalservices.userutilities.FieldPicker",{alias:"widget.tsfieldpickerbutton",extend:"Rally.ui.Button",requires:["Rally.ui.popover.Popover","Rally.ui.Button","Rally.ui.picker.FieldPicker","Ext.state.Manager"],toolTipConfig:{html:"Show Columns",anchor:"top"},iconCls:"icon-add-column",cls:"field-picker-btn secondary rly-small",margin:"2 0 0 0",alwaysSelectedValues:["FormattedID","Name"],fieldBlackList:[],fieldPickerConfig:{},buttonConfig:{},modelNames:["User"],rankingEnabled:!1,constructor:function(a){this.config=_.merge({},this.config||{},a||{}),this.callParent([a])},initComponent:function(){if(this.models)return this.on("click",this._createPopover,this),void this.callParent(arguments);if(this.context&&this.modelNames&&this.modelNames.length>0)Rally.data.ModelFactory.getModels({types:this.modelNames,context:this.context,success:function(a){this.models=a},failure:function(a){console.log("failedparam")},scope:this}),this.on("click",this._createPopover,this);else{this.iconCls="icon-none";var a="Please update the CA.technicalservices.FieldPicker configuration with modelNames and context";this.toolTipConfig={html:'<div style="color:red;">'+a+"</div>"},this.on("click",function(){Rally.ui.notify.Notifier.showError({message:a})})}this.callParent(arguments)},getFields:function(){return _.union(this._fields||[],this.alwaysSelectedValues)},_getPickerConfig:function(){var a;return a=_.extend({value:this._fields,fieldBlackList:this.fieldBlackList,alwaysSelectedValues:this.alwaysSelectedValues,context:this.context},this.fieldPickerConfig)},_createPopover:function(a){var b=a.getEl();this.popover=Ext.create("Rally.ui.popover.Popover",{target:b,placement:["bottom","left","top","right"],cls:"field-picker-popover",toFront:Ext.emptyFn,buttonAlign:"center",title:this.getTitle(),listeners:{destroy:function(){this.popover=null},scope:this},buttons:[{xtype:"rallybutton",text:"Apply",cls:"field-picker-apply-btn primary rly-small",listeners:{click:function(){this._onApply(this.popover)},scope:this}},{xtype:"rallybutton",text:"Cancel",cls:"field-picker-cancel-btn secondary dark rly-small",listeners:{click:function(){this.popover.close()},scope:this}}],items:[_.extend({xtype:"rallyfieldpicker",cls:"field-picker",itemId:"fieldpicker",modelTypes:this._getModelTypes(),alwaysExpanded:!0,width:200,emptyText:"Search",selectedTextLabel:"Selected",availableTextLabel:"Available",listeners:{specialkey:function(a,b){b.getKey()===b.ESC&&this.popover.close()},scope:this}},this._getPickerConfig())]})},_getModelTypes:function(){return _.pluck(this._getModels(),"typePath")},_getModels:function(){return _.reduce(this.models,function(a,b){return"artifact"===b.typePath?a=a.concat(b.getArtifactComponentModels()):a.push(b),a},[])},getTitle:function(){return"Show Columns"},updateFields:function(a,b){this._fields=a,this.popover&&this.popover.down("rallyfieldpicker")&&this.popover.down("rallyfieldpicker").setValue(a.join(",")),this.saveState()},getState:function(){return{fields:this._fields}},applyState:function(a){a&&(this._fields=a.fields)},_onApply:function(a){var b=a.down("rallyfieldpicker"),c=_.map(b.getValue(),function(a){return a.get("name")});this.updateFields(c),a.close(),this.fireEvent("fieldsupdated",c)}}),Ext.define("TSTreeModel",{extend:"Ext.data.Model",fields:[{name:"FormattedID",type:"String"},{name:"Name",type:"String"},{name:"_ref",type:"String"},{name:"_type",type:"String"}]}),Ext.define("CArABU.technicalservices.util.TreeBuilding",{singleton:!0,logger:new CArABU.technicalservices.Logger,constructRootItems:function(a){var b=[];return Ext.Object.each(a,function(c,d){if(d.get("children")||d.set("children",[]),d.get("Milestones")){var e=d.get("Milestones")._tagsNameArray;Ext.Array.each(e,function(b){var c=parseInt(b._ref.replace(/.*\//,""),10);if(a[c]){var e=a[c].get("children");e.push(d),a[c].set("children",e)}})}else b.push(d)},this),b},constructRootItemsFromHashes:function(a){var b=[];return Ext.Object.each(a,function(c,d){d.children||(d.children=[]);var e=d.parent;if(e||Ext.Array.contains(b,d)){var f=e.ObjectID;if(a[f]){var g=a[f];g.children||(g.children=[]);var h=g.children;h.push(d),g.children=h}else this.logger.log("Saved parent missing: ",f),Ext.Array.contains(b,d)||b.push(d)}else b.push(d)},this),b},convertModelsToHashes:function(a){var b=[];return Ext.Array.each(a,function(a){if(this.isModel(a)){var c=a.data;c.expanded=!1,c.leaf=!1,a.get("children")&&(c.children=this.convertModelsToHashes(a.get("children"))),a.get("parent")&&(this.isModel(a.get("parent"))?c.parent=a.get("parent").getData():c.parent=a.get("parent")),c.children&&0!==c.children.length||(c.leaf=!0),b.push(c)}else b.push(a)},this),b},isModel:function(a){return a&&a instanceof Ext.data.Model},rollup:function(a){return Ext.Array.each(a.root_items,function(b){this._setValueFromChildren(b,a.field_name,a.calculator,a.leaves_only)},this),a.root_items},_setValueFromChildren:function(a,b,c,d){var e=a.get(b)||0;c&&(e=this._calculate(a,c));var f=a.get("children")||[];d&&f.length>0&&(e=0),Ext.Array.each(f,function(a){this._setValueFromChildren(a,b,c,d);var f=a.get(b)||0;c&&0==f&&(f=this._calculate(a,c)),e+=f},this),a.set(b,e)},_calculate:function(a,b){"use strict";return"count"==b?1:b(a)},pruneByFieldValue:function(a,b,c){return Ext.Array.each(a,function(d){this._removeByFieldValue(a,d,b,c)},this),a},_removeByFieldValue:function(a,b,c,d){var e=new RegExp(d);if(b){var f=b.get(c)||"";if(e.test(f))Ext.Array.remove(a,b);else{var g=b.get("children")||[];g.length>0&&Ext.Array.each(g,function(a){this._removeByFieldValue(g,a,c,d)},this)}}}}),Ext.define("CArABU.technicalservices.MilestonTree",{extend:"Ext.container.Container",alias:"widget.tsmilestonetree",columns:[],cls:"rally-grid",tree_cls:"ts-rally-grid",targetFilter:"(ObjectID > 0)",targetType:"Milestone",targetChunk:125,respectScopeForChildren:!0,layout:"border",initComponent:function(){if(0==this.columns.length)throw"Missing required setting: columns";this.callParent(),this.addEvents("aftertree","afterloadtargets","afterload")},initItems:function(){this.callParent(),this._fetchPortfolioNames().then({scope:this,success:function(a){this.lowestPIName=a[0],this.logger.log("Lowest PI Name:",this.lowestPIName),this._gatherData().then({scope:this,success:function(a){this.fireEvent("afterload",this);var b=CArABU.technicalservices.util.TreeBuilding.constructRootItems(a),c=this._doColumnCalculations(b),d=CArABU.technicalservices.util.TreeBuilding.convertModelsToHashes(c);this._makeStoreAndShowGrid(d)},failure:function(a){this.fireEvent("aftertree",this),this.add({xtype:"container",html:a})}})},failure:function(a){this.fireEvent("aftertree",this),this.add({xtype:"container",html:a})}})},_gatherData:function(){var a=Ext.create("Deft.Deferred");return this._fetchTargetItems().then({scope:this,success:function(b){var c={};Ext.Array.each(b,function(a){c[a.get("ObjectID")]=a}),this.fireEvent("afterloadtargets",this,b);var d=[];d.push(this._fetchChildItems(b,c)),Deft.Promise.all(d).then({scope:this,success:function(b){var c=Ext.Array.flatten(b),d={};c.length>0&&(d=c[0]),a.resolve(d)},failure:function(b){a.reject(b)}})},failure:function(b){a.reject(b)}}),a},_fetchTargetItems:function(){var a=Ext.create("Deft.Deferred"),b="( ObjectID > 0 )";this.targetFilter&&(b=this.targetFilter);var c=null;if(b instanceof Rally.data.wsapi.Filter)c=b;else try{var c=Rally.data.wsapi.Filter.fromQueryString(b)}catch(d){a.reject("Filter is poorly constructed")}return Ext.create("Rally.data.wsapi.Store",{autoLoad:!0,model:this.targetType,fetch:this._getFetchNames(),filters:c,limit:"Infinity",listeners:{scope:this,load:function(b,c,d){d?a.resolve(c):a.reject("Error loading "+this.targetType+" items")}}}),a.promise},_fetchChildItems:function(a,b,c){c||(c=Ext.create("Deft.Deferred"));var d=Ext.Array.map(a,function(a){return a.get("ObjectID")}),e=[],f=d.length;if(f>0){this.logger.log("Searching children in chunks of "+this.targetChunk+" parents");for(var g=0;f>g;g+=this.targetChunk){var h=d.slice(g,g+this.targetChunk);e.push(this._fetchByArrayOfValues(this.lowestPIName,h,"Milestones.ObjectID"))}}return e.length>0?Deft.Promise.all(e).then({scope:this,success:function(a){var d=Ext.Array.flatten(a);Ext.Array.each(d,function(a){if(!b[a.get("ObjectID")]){this._getParentFrom(a);b[a.get("ObjectID")]=a}},this),this._fetchChildItems(d,b,c)},failure:function(a){c.reject(a)}}):c.resolve(b),c.promise},_getParentFrom:function(a){var b=a.get("_type");if("hierarchicalrequirement"==b){var c=a.get("Parent")||a.get("PortfolioItem");return a.set("parent",c),c}if(/portfolio/.test(b)){var c=a.get("Parent");return a.set("parent",c),c}if("task"==b){var c=a.get("WorkProduct");return a.set("parent",c),c}if("defect"==b){var c=a.get("Requirement");return("TestFolder"==this.targetType||"TestCase"==this.targetType)&&(c=a.get("TestCase")),a.set("parent",c),c}if("testfolder"==b){var c=a.get("Parent");return a.set("parent",c),c}if("testcase"==b){var c=a.get("TestFolder");return a.set("parent",c),c}return null},_fetchByArrayOfValues:function(a,b,c){for(var d=Ext.create("Deft.Deferred"),e=Ext.create("Rally.data.wsapi.Filter",{property:c,value:b[0]}),f=1;f<b.length;f++)e=e.or(Ext.create("Rally.data.wsapi.Filter",{property:c,value:b[f]}));var g={autoLoad:!0,model:a,fetch:this._getFetchNames(),filters:e,listeners:{scope:this,load:function(b,c,e){e?d.resolve(c):d.reject("Error loading "+a+" items")}}};return this.respectScopeForChildren||(g.context={project:null}),Ext.create("Rally.data.wsapi.Store",g),d.promise},_doColumnCalculations:function(a){var b=a;return Ext.Array.each(this.columns,function(c){c.calculator&&c.dataIndex&&(b=CArABU.technicalservices.util.TreeBuilding.rollup({root_items:a,field_name:c.dataIndex,leaves_only:c.leaves_only,calculator:c.calculator}))}),b},_makeStoreAndShowGrid:function(a){if(0==a.length)this.add({xtype:"container",margin:15,html:"No data found"});else{Ext.define("TSTreeModelWithAdditions",{extend:"TSTreeModel",fields:this._getFetchFields()});var b=Ext.create("Ext.data.TreeStore",{model:TSTreeModelWithAdditions,root:{expanded:!1,children:a}});this.logger.log("width:",this.width);var c=this.add({xtype:"treepanel",region:"center",store:b,cls:this.tree_cls,rootVisible:!1,enableColumnMove:!1,sortableColumns:!1,autoScroll:!0,rowLines:!0,width:this.width,height:this.height,columns:this.columns})}this.fireEvent("aftertree",this,c)},_fetchPortfolioNames:function(){var a=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{autoLoad:!0,model:"TypeDefinition",sorters:[{property:"Ordinal",direction:"ASC"}],filters:[{property:"Parent.Name",operator:"=",value:"Portfolio Item"},{property:"Creatable",operator:"=",value:!0}],listeners:{scope:this,load:function(b,c,d){if(d){var e=_.map(c,function(a){return a.get("TypePath")});a.resolve(e)}else a.reject("Error loading portofolio item names.")}}}),a.promise},_getFetchFields:function(){var a=[{name:"ObjectID",type:"auto"},{name:"Name",type:"string"},{name:"_type",type:"string"}],b=Ext.Array.map(this.columns,function(a){var b={name:a.dataIndex,type:"auto"};return a.convert&&(b.convert=a.convert),b});return Ext.Array.merge(a,b)},_getFetchNames:function(){var a=["ObjectID","_type","Name"],b=["Parent","PortfolioItem","Requirement","WorkProduct","TestFolder","TestCase"],c=["Children","Tasks","UserStories","TestCases","Milestones"],d=Ext.Array.merge(a,c);return d=Ext.Array.merge(d,b),Ext.Array.each(this.columns,function(a){d=Ext.Array.merge(d,[a.dataIndex]),a.otherFields&&(d=Ext.Array.merge(d,a.otherFields))}),d}}),Ext.define("CArABU.app.MilestoneFeatureTree",{extend:"Rally.app.App",componentCls:"app",logger:new CArABU.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"header",minHeight:30},{xtype:"container",itemId:"filter_container"},{xtype:"container",itemId:"display_box"}],targetFilter:null,integrationHeaders:{name:"CArABU.app.MilestoneFeatureTree"},launch:function(){this.logger.setSaveForLater(this.getSetting("saveLog")),this._fetchModels().then({scope:this,success:function(a){this.models=a,this._addControls()},failure:function(a){alert(a)}})},_addControls:function(){var a=this.down("#header");a.add(this._getFilterPickerConfig()),a.add(this._getColumnPickerConfig())},_getColumnPickerConfig:function(){return{xtype:"tsfieldpickerbutton",modelNames:["milestone","portfolioitem"],fieldBlackList:["Changesets","Connections","Collaborators","Description","Notes","ObjectID","ObjectUUID","RevisionHistory","Risks","Subscription","VersionId","Workspace"],context:this.getContext(),stateful:!0,stateId:this.getContext().getScopedStateId("fieldpicker"),alwaysSelectedValues:["FormattedID","Name","PercentDoneByStoryPlanEstimate","PercentDoneByStoryCount"],listeners:{fieldsupdated:function(a){this._addTree()},afterrender:this._addTree,scope:this}}},_getFilterPickerConfig:function(){var a=["FlowState"],b=["Tags"];return{xtype:"rallyinlinefiltercontrol",align:"left",inlineFilterButtonConfig:{stateful:!0,stateId:this.getContext().getScopedStateId("ms-inline-filter"),context:this.getContext(),modelNames:["milestone"],filterChildren:!1,inlineFilterPanelConfig:{quickFilterPanelConfig:{defaultFields:["ArtifactSearch"],addQuickFilterConfig:{blackListFields:a,whiteListFields:b}},advancedFilterPanelConfig:{advancedFilterRowsConfig:{propertyFieldConfig:{blackListFields:a,whiteListFields:b}}}},listeners:{inlinefilterchange:this._onFilterChange,inlinefilterready:function(a){this.down("#filter_container").add(a)},scope:this}}}},_onFilterChange:function(a){this.logger.log("--",a.getTypesAndFilters());var b=a.getTypesAndFilters();this.targetFilter=b&&b.filters,0===this.targetFilter.length?this.targetFilter=null:this.targetFilter=this.targetFilter[0],this._addTree()},_addTree:function(){var a=this.down("#display_box");a.removeAll(),this.setLoading("Loading...");var b=this._getAvailableTreeHeight(),c=this._getAvailableTreeWidth();this.logger.log("Height/Width: ",b,c);var d={xtype:"tsmilestonetree",columns:this._getColumns(),targetType:"Milestone",height:b,maxHeight:b,width:c,logger:this.logger,respectScopeForChildren:!0,listeners:{scope:this,afterrender:function(){this.setLoading("Loading tree...")},afterloadtargets:function(a,b){this.setLoading("Finding children ("+b.length+")")},aftertree:function(){this.setLoading(!1)}}};this.targetFilter&&(d.targetFilter=this.targetFilter),a.add(d)},_getAvailableTreeHeight:function(){var a=this.getHeight()||Ext.getBody().getHeight()||0,b=a-100;return Ext.max([200,b])},_getAvailableTreeWidth:function(){var a=this.getWidth()||Ext.getBody().getWidth()||0,b=a-20;return Ext.max([550,b])},_getColumns:function(){var a=this,b=function(b,c,d){return a._nameRenderer(b,c,d)},c=[{xtype:"treecolumn",text:"Item",dataIndex:"Name",itemId:"tree_column",renderer:b,flex:1,minWidth:400,menuDisabled:!0,otherFields:["FormattedID","ObjectID"]},{text:"Leaf Story Count",dataIndex:"LeafStoryCount",menuDisabled:!0,hidden:!0,calculator:function(a){return val=a.get("LeafStoryCount")||0}},{text:"Accepted Leaf Story Count",dataIndex:"AcceptedLeafStoryCount",hidden:!0,menuDisabled:!0,calculator:function(a){return val=a.get("AcceptedLeafStoryCount")||0}},{text:"Percent Done By Story Count",dataIndex:"PercentDoneByStoryCount",menuDisabled:!0,renderer:function(b,c,d){return a._magicRenderer({name:"PercentDoneByStoryCount"},b,c,d)||""},convert:function(a,b){var c=b.get("AcceptedLeafStoryCount")||0,d=b.get("LeafStoryCount")||0,e=0;return 0!==d&&(e=c/d),Ext.Number.toFixed(e,2)}},{text:"Leaf Story Plan Estimate Total",dataIndex:"LeafStoryPlanEstimateTotal",menuDisabled:!0,hidden:!0,calculator:function(a){return val=a.get("LeafStoryPlanEstimateTotal")||0}},{text:"Accepted Leaf Plan Estimate Total",dataIndex:"AcceptedLeafStoryPlanEstimateTotal",hidden:!0,menuDisabled:!0,calculator:function(a){return val=a.get("AcceptedLeafStoryPlanEstimateTotal")||0}},{text:"Percent Done By Story Plan Estimate",dataIndex:"PercentDoneByStoryPlanEstimate",menuDisabled:!0,renderer:function(b,c,d){return a._magicRenderer({name:"PercentDoneByStoryPlanEstimate"},b,c,d)||""},convert:function(a,b){var c=b.get("AcceptedLeafStoryPlanEstimateTotal")||0,d=b.get("LeafStoryPlanEstimateTotal")||0,e=0;return 0!==d&&(e=c/d),Ext.Number.toFixed(e,2)}}],d=this.down("tsfieldpickerbutton"),e=d&&d.getFields();if(e){this.logger.log("Additional fields: ",e);var f=["FormattedID","Name","PercentDoneByStoryPlanEstimate","PercentDoneByStoryCount"];Ext.Array.each(e,function(b){if(!Ext.Array.contains(f,b)){var d=null;Ext.Object.each(a.models,function(a,c){return d=c.getField(b),d?!1:void 0}),d||console.log("cannot find field ",b),c.push({text:d.displayName.replace(/\(.*\)/,""),dataIndex:d.name,menuDisabled:!0,renderer:function(b,c,e){return a._magicRenderer(d,b,c,e)||""}})}})}return c},_nameRenderer:function(a,b,c){var d=c.get("Name");if(c.get("FormattedID")){var e=c.get("FormattedID")+": "+a,f=Rally.nav.Manager.getDetailUrl(c);d="<a target='_blank' href='"+f+"'>"+e+"</a>"}return d},_magicRenderer:function(a,b,c,d){var e=a.name||a.get("name"),f=d.get("_type"),g=this.models[f];try{var a=g.getField(e);a||Ext.Object.each(this.models,function(b,c){return a=c.getField(e),a?!1:void 0});var h=Rally.ui.renderer.RendererFactory.getRenderTemplate(a);return h.apply(d.data)}catch(i){return console.log(i),"."}},_fetchModels:function(){var a=Ext.create("Deft.Deferred");return TSUtilities.fetchPortfolioNames().then({scope:this,success:function(b){var c=Ext.Array.merge(b,["milestone","hierarchicalrequirement"]);Rally.data.ModelFactory.getModels({types:c,success:function(b){a.resolve(b)},failure:a.reject})},failure:a.reject}),a.promise},getSettingsFields:function(){var a="5 0 5 0";return[{name:"saveLog",xtype:"rallycheckboxfield",boxLabelAlign:"after",fieldLabel:"",margin:a,boxLabel:'Save Logging<br/><span style="color:#999999;"><i>Save last 100 lines of log for debugging.</i></span>'}]},getOptions:function(){var a=[{text:"About...",handler:this._launchInfo,scope:this}];return a},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{showLog:this.getSetting("saveLog"),logger:this.logger})},isExternal:function(){return"undefined"==typeof this.getAppId()}});

               Rally.launchApp('CArABU.app.MilestoneFeatureTree', {
                   name: 'TS Milestone Feature Tree'
               });
        });
    </script>

    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}

.x-tree-panel.ts-rally-grid .x-grid-body .x-grid-row .x-grid-cell .x-grid-cell-inner .x-tree-elbow-plus, .x-tree-panel.ts-rally-grid .x-grid-body .x-grid-row .x-grid-cell .x-grid-cell-inner .x-tree-elbow-end-plus {
    background-image: url(/slm/js-lib/rui/builds/rui/resources/css/images/grid/node-collapsed.png);
    background-repeat: no-repeat;
    background-position: center;
    background-size: 11px 11px;
}

.x-tree-panel.ts-rally-grid .x-grid-body .x-grid-data-row.x-grid-tree-node-expanded .x-grid-cell .x-tree-elbow-plus, .x-tree-panel.ts-rally-grid .x-grid-body .x-grid-data-row.x-grid-tree-node-expanded .x-grid-cell .x-tree-elbow-end-plus {
    background-image: url(/slm/js-lib/rui/builds/rui/resources/css/images/grid/node-expanded.png);
    background-repeat: no-repeat;
    background-position: center;
    background-size: 11px 11px;
}

    </style>

</head>
<body></body>
</html>